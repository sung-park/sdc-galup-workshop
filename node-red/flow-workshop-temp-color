[{"id":"e601d270.081ea8","type":"function","z":"8d06f96.4858508","name":"Calculate celsius","func":"  var reading;\n \n\n  reading = msg.payload;\n\n  //Serial.print(\"Thermistor reading: \"); Serial.println(reading);\n\n  // convert the value to resistance\n  reading = ((1023.0 * 10000) / reading);\n  reading -= 10000;\n\n  //Serial.print(\"Thermistor resistance: \"); Serial.println(reading);\n\n  var steinhart;\n  steinhart = reading / 10000;     // (R/Ro)\n  steinhart = Math.log(steinhart);                  // ln(R/Ro)\n  steinhart /= 3380;                   // 1/B * ln(R/Ro)\n  steinhart += 1.0 / (25 + 273.15); // + (1/To)\n  steinhart = 1.0 / steinhart;                 // Invert\n  steinhart -= 273.15;                         // convert to C\n\n\n  msg.payload = steinhart;\n\nreturn msg;","outputs":1,"noerr":0,"x":350,"y":140,"wires":[["90a0b75.5818748"]]},{"id":"90a0b75.5818748","type":"function","z":"8d06f96.4858508","name":"Convert celsius to color","func":"var minT = 25;\nvar maxT = 35;\n\n  \nvar colormap = global.get('colormap')\n\noptions = {\n  colormap: 'rainbow',   // pick a builtin colormap or add your own \n  nshades: 100,       // how many divisions \n  format: 'hex',     // \"hex\" or \"rgb\" or \"rgbaString\" \n  alpha: 1           // set an alpha value or a linear alpha mapping [start, end] \n}\n\nvar cg = colormap(options)\n\nvar output = parseInt(( msg.payload - minT ) * 10)\n\nmsg.payload = cg[output];\n    \nreturn msg;","outputs":1,"noerr":0,"x":590,"y":180,"wires":[["7fbf68a5.3ba678","3cc890b6.69888"]]},{"id":"8accac1b.0df298","type":"gpio in","z":"8d06f96.4858508","name":"Read GPIO #0","state":"ANALOG","samplingInterval":"3000","pin":"0","board":"49f75fd6.c696f","x":140,"y":100,"wires":[["e601d270.081ea8"]]},{"id":"3cc890b6.69888","type":"debug","z":"8d06f96.4858508","name":"Print debug log","active":false,"console":"false","complete":"payload","x":820,"y":140,"wires":[]},{"id":"7fbf68a5.3ba678","type":"johnny5","z":"8d06f96.4858508","name":"Change LED color","func":"var Playground = require('playground-io');\n\nvar pixels = new five.Led.RGBs({\n    controller: Playground.Pixel,\n    pins: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n});\n\nnode.on(\"input\", function(msg){\n    pixels.forEach(pixel => pixel.color(msg.payload));\n});","board":"49f75fd6.c696f","noerr":0,"x":830,"y":220,"wires":[[]]},{"id":"49f75fd6.c696f","type":"nodebot","z":"","name":"","username":"","password":"","boardType":"playground-io","serialportName":"","serialportName2":"/dev/ttyACM0","connectionType":"local","mqttServer":"","socketServer":"","pubTopic":"","subTopic":"","tcpHost":"","tcpPort":"","sparkId":"","sparkToken":"","beanId":"","impId":"","meshbluServer":"https://meshblu.octoblu.com","uuid":"","token":"","sendUuid":""}]
